@page
<style>
    .square-container {
        position: relative;
        display: inline-block;
        max-width: 900px; /* Adjust the maximum width as needed */
        max-height: 100%; /* Set maximum height to 100% of the parent container */
        margin: auto; /* Center the container */
        padding: 20px; /* Add some padding to the container */
        border-radius: 8px; /* Add border radius for rounded corners */
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Add a subtle box shadow */
        background-color: #FFDCC7; /* Add a background color if desired */
        overflow: auto; /* Add overflow:auto to enable scrolling if content exceeds the container height */
    }

    .square-container {
        position: relative;
        display: inline-block;
        margin: 0;
        position: absolute;
        top: 50%;
        left: 50%;
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
        background-color: #FFDCC7;
        display: flex;
        justify-content: flex-start; /* Change the alignment to shift contents to the left */
        align-items: center;
    }

    .square {
        height: 200px; /* Adjust the dimensions as needed */
        width: 0px; /* Adjust the dimensions as needed */
        position: relative;
    }

    .buttons-container button {
        width: 200px; /* Set the width of the buttons to match the square */
        margin: 5px; /* Add margin between buttons */
        display: flex;
        justify-content: center;
    }


    .buttons-container h3 {
        color: black; /* Set the text color for the header */
        font-weight: normal;
    }

    .custom-button {
        background-color: #F96C15; /* Set the background color */
        color: #fff; /* Change the text color for better visibility */
        /* Additional styling if needed */
    }

    .popup {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 20px;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        z-index: 1000;
    }

</style>


<div class="orangeHeader">
    <header> Patient Dashboard </header>
</div>

@{
    var dbContext = new team12MainContext(); // Replace with your actual DbContext
    var userEmail = User.Identity.Name;
    var user = dbContext.Patients.FirstOrDefault(p => p.Email == userEmail);
}

<h2>Welcome, @user.FirstName!</h2>


<div class="container">
    <main role="main">
        <div class="square-container">
            <div class="buttons-container">
                <h3> Navigation </h3>
                <button onclick="location.href='@Url.Action("Index", "PrescriptionsPatientView")'" class="custom-button" type="button">Prescriptions</button>
               <!-- <button onclick="location.href='@Url.Action("Index", "Prescriptions")'" class="custom-button" type="button">Prescriptions</button> -->
                <button onclick="location.href='@Url.Action("Index", "PatientAppointments")'" class="custom-button" type="button">Appointments</button>
                <button onclick="location.href='@Url.Action("Index", "NotificationsPatientView")'" class="custom-button" type="button">Messages</button>
                <button onclick="window.location.href='/Dashboards/PatientDashboard'" class="custom-button">Patient Portal</button>
            </div>
            <div class="square"></div>
        </div>
    </main>
</div>

<script>
    // Function to check for unread notifications
    function checkNotifications() {
        $.ajax({
            url: '@Url.Action("CheckUnreadNotifications", "NotificationsPatientView")',
            method: 'GET',
            success: function (result) {
                if (result.hasUnreadNotifications) {
                    // Display pop-up
                    $('.popup').show();
                }
            },
            error: function (error) {
                console.error('Error checking notifications:', error);
            }
        });
    }

    // Function to mark all unread notifications as read
    function markAllAsReadAndNavigate() {
        // Perform the logic to mark all as read (you need to implement this logic)
        $.ajax({
            url: '@Url.Action("MarkAllAsRead", "NotificationsPatientView")', // Replace with your actual controller action
            method: 'POST',
            success: function () {
                // Navigate to the notifications screen
                window.location.href = '@Url.Action("Index", "NotificationsPatientView")';
            },
            error: function (error) {
                console.error('Error marking all as read:', error);
            }
        });
    }

    // Call the function on page load
    $(document).ready(function () {
        checkNotifications();
    });
</script>

<!-- Existing HTML content -->
<!-- New pop-up div -->
<div class="popup">
    <h3>New Unread Notifications!</h3>
    <p>You have new unread messages. Click OK to view them.</p>
    <button onclick="markAllAsReadAndNavigate()" class="custom-button" type="button">OK</button>
</div>